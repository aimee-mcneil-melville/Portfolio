---

import Icon from 'astro-iconify';
import { db, eq, Gallery } from 'astro:db';

const { id } = Astro.props

const data = await db.select()
  .from(Gallery)
  .where(eq(Gallery.portfolioId, id));

 
---

<div class="gallery-wrapper">
  <div class="gallery">{data.map((Gallery) => (
      <img class="gallery-item" alt={Gallery.alt} src={Gallery.image} />))}
  </div>
  <div class="gallery-controls">
    <button class="control-icon prev"><Icon name="ph:caret-circle-left" alt="previous" /></button>
    <button class="control-icon next"><Icon name="ph:caret-circle-right" alt="next" /></button>
  </div>
</div>


<style>
  .gallery-wrapper {
  position: relative;
  top: 3em;
  margin: 50px 0;
  max-width: 1200px;
  max-height: 90vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
}
  
  .gallery {
  display: flex;
  transition: transform 0.8s ease-in-out;
}
  .gallery-item {
  width: 100%;
  height: auto;
  object-fit: cover;
  object-position: center;
}
  
  .gallery-controls {
  display: flex;
  justify-content: space-between;
  position: absolute;
  top: 50%;
  width: 100%;
  transform: translateY(-50%);
  z-index: 1000;
}

.control-icon {
  width: 3em;
  height: 3rem;
  background-color: rgba(0, 0, 0, 0.5);
  color: rgb(var(--accent-light));
  border: none;
  cursor: pointer;
  font-size: 1em;
  margin: 0 1em;
}

@media (max-width: 600px) {
    .gallery-item {
      width: 100%; 
        height: 85vw;
      }

      .gallery-controls {
    position: static; 
    margin-top: 2em;
    justify-content: center;
  }     
}
  
</style>


<script>

const prevButton = document.querySelector<HTMLButtonElement>('.prev');
const nextButton = document.querySelector<HTMLButtonElement>('.next');
const gallery = document.querySelector<HTMLButtonElement>('.gallery');
const items = document.querySelectorAll('.gallery-item');
let index = 0;

function updategallery() {
  const itemWidth = items[0].clientWidth;
  if (gallery) {
    gallery.style.transform = `translateX(${-index * itemWidth}px)`;
  }
}

if (prevButton && nextButton) {
  prevButton.addEventListener('click', showPrev);
  nextButton.addEventListener('click',showNext );
}

function showPrev() {
    index = (index > 0) ? index - 1 : items.length - 1;
    updategallery();
}

function showNext() {
    index = (index < items.length - 1) ? index + 1 : 0;
    updategallery();
}

   </script>